Xen PV Channels
------------------------------------------------------------------------
                                                             David Scott
                                                   dave.scott@citrix.com


A channel is a low-bandwidth private byte stream similar to a serial
link. Typical uses of channels are

  1. to provide initial configuration information to a VM on boot
     (example use: CloudStack's cloud-early-config service)
  2. to signal/query an in-guest agent
     (example use: oVirt's guest agent)

Channels are similar to virtio-serial devices, and are intended to be
used in the implementation of libvirt <channel>s when running on Xen.

Note: if an application requires a high-bandwidth link then it should use
vchan instead.

From the frontend's point of view, a channel is a PV console with a
name, a where the name can be used to locate the correct device. The
name is stored in the frontend xenstore directory:

  /local/domain/$DOMID/device/console/$DEVID/name

The frontend can check for this key when the console is hotplugged,
and handle the device appropriately. For example the frontend could
spawn a guest agent when a channel with a well-known name is created,
and still spawn regular getty processes when a normal console is created.

The backend is configured by 2 xenstore keys:

  kind = (none | path | pty | socket )
  path = <some path>

The configuration should be interpreted as follows:

  kind = none: the backend will be connected to /dev/null
  kind = path: the channel will be read the output appended to the
    file given by 'path'
  kind = pty: the backend will connect to a PTY like a regular console
  kind = socket: the backend will accept a connection on the Unix
    domain socket given by 'path' and proxy data to and from the device.

In the default implementation where the backend is run in the toolstack
domain, the qemu "chardev" mechanism is used. Internally this writes
the 2 xenstore keys for the backend to the frontend:

  type = ioemu
  output = chardev:libxl-channel$DEVID

The qemu commandline contains one "-chardev id=libxl-channel$DEVID,..."
option per channel.

